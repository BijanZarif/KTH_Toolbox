!> @file runparam.f
!! @ingroup runparam
!! @brief Set of subroutines to read user and module runtime parameters.
!! @author Adam Peplinski
!! @date Mar 7, 2016
!=======================================================================
!> @brief Main interface of runtime parameter module.
!! @details This routine reads runtime parameters from .rpar file using
!! Fortran90 namelists and writes them to standard outpu (log file).
!! @attention This routine should be executed before any of module
!! initialisation routnes would be called (e.g. inside usrdat).
!! @ingroup runparam
!! @see @ref readers_writers_page, @ref parameter_list_page
      subroutine runprm_main
      implicit none

      include 'SIZE_DEF'
      include 'SIZE'            ! NID, NIO
      include 'INPUT_DEF'
      include 'INPUT'           ! REAFLE

!     local variables
      integer lenstr, ierr
      integer iunit
      character*132 fname 
!-----------------------------------------------------------------------
!     Open parameter file and read contents
      ierr=0
      if (NID.eq.0) then
!     find free unit
         call io_file_freeid(iunit, ierr)
!     get file name and open file
         if(ierr.eq.0) then
            fname=adjustl(REAFLE)
            ! overwrite .rea
            lenstr = len_trim(fname) - 4
            fname(lenstr+1:lenstr+6)='.rpar'
            write(6,*) 'Openning runtime parameter file: ',trim(fname)
            open (unit=iunit,file=fname,status='old',action='read',
     $          iostat=ierr)
         endif
      endif
      call err_chk(ierr,'Error opening .rpar file.$')

!     place to call user/module _param_in routines
      call runprm_in(iunit)

!     close the file
      ierr=0
      if (NID.eq.0) close(unit=iunit,iostat=ierr)
      call err_chk(ierr,'Error closing .rpar file.$')

!     stamp logs
      if (NIO.eq.0) write(*,*) 'Runtime parameter list:'
      call runprm_out(6)
      if (NIO.eq.0) write(*,*) 

      return
      end
!=======================================================================
!> @brief Execute user/module parameter reading routines.
!! @ingroup runparam
!! @param[in]  iunit    file unit
!! @warning This routine has to be modified by the use or generated by
!!  script, as it shoud point out to the used modules only. Use this
!!  routine as and example only.
!! @todo Develop script generating this routine or move to user space
!! @see @ref readers_writers_page
      subroutine runprm_in(iunit)
      implicit none

!     argument list
      integer iunit
!-----------------------------------------------------------------------
!     place to call module _param_in routines

!     user parameters
      call user_param_in(iunit)

      return
      end
!=======================================================================
!> @brief Execute user/module parameter writing routines.
!! @ingroup runparam
!! @param[in]  iunit    file unit
!! @warning This routine has to be modified by the use or generated by
!!  script, as it shoud point out to the used modules only. Use this
!!  routine as and example only.
!! @todo Develop script generating this routine or move to user space
!! @see @ref readers_writers_page
      subroutine runprm_out(iunit)
      implicit none

!     argument list
      integer iunit
!-----------------------------------------------------------------------
!     place to call module _param_in routines

!     user parameters
      call user_param_out(iunit)

      return
      end
!=======================================================================
